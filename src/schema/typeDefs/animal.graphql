extend type Query {
    """
    Lookup an animal.

    Examples:

    animal(id: 1)
    """
    animal("Animal id in database" id: Int!): Animal

    """
    Get all animals.

    Examples:

    animals, animals (ids: [1,2,3]), animals(first:3)
    """
    animals(ids: [Int!], after: String, first: Int, before: String, last: Int): AnimalsConnection
}

type AnimalsConnection {
    edges: [AnimalEdge]
    pageInfo: PageInfo!
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
}

type AnimalEdge {
    node: Animal
    cursor: String!
}

#type AnimalsConnection {
#    edges: [AnimalEdge]
#    pageinfo: PageInfo!
#}
#
#type PageInfo {
#    hasnextpage: Boolean!
#    haspreviouspage: Boolean!
#    startcursor: String
#    endcursor: String
#}

"Represents an animal."
type Animal {
    "Animal id, for example 2"
    id: Int!
    "Animal name"
    name: String
    "Organization id"
    organization: Int!
    """
    Animal status by language.
    Examples: status(language: "en") or just status - will return default language ("lt") translation
    """
    status("Language code" language: String = "lt"): String
    "Image URL"
    imageUrl: String
    "Comments"
    comments: String
    "Modification time"
    modTime: String

    "Animal active registration info"
    registration: AnimalRegistration
    "Animal implanted microchip info"
    microchip: AnimalMicrochip
    "Animal details"
    details: AnimalDetails
}

extend type Mutation {
    "Created animal"
    createAnimal(input: CreateAnimalInput!): Animal
    "Updated animal"
    updateAnimal(input: UpdateAnimalInput!): Animal
    "Deleted animal"
    deleteAnimal(input: DeleteAnimalInput!): Animal
}

enum AnimalStatus {
    healthy
    vaccinated
    sick
    adopted
}

input CreateAnimalInput {
    "Animal name (128 characters max)"
    name: String
    "Organization id"
    organization: Int!
    "Status"
    status: AnimalStatus
    "Image File"
    image: Upload
    "Comments"
    comments: String
    "AnimalRegistration"
    registration: AnimalRegistrationInput!
    "AnimalDetails"
    details: AnimalDetailsInput
    "AnimalMicrochip"
    microchip: CreateAnimalMicrochipInput
}

input UpdateAnimalInput {
    "Animal id, for example 2"
    id: Int!
    "Animal name (128 characters max)"
    name: String
    "Organization id"
    organization: Int
    "Status"
    status: AnimalStatus
    "Image File"
    image: Upload
    "Comments"
    comments: String
    "AnimalRegistration"
    registration: AnimalRegistrationInput
    "AnimalDetails"
    details: AnimalDetailsInput
    "AnimalMicrochip"
    microchip: UpdateAnimalMicrochipInput
}

input DeleteAnimalInput {
    "Animal id, for example 2"
    id: Int!
}
