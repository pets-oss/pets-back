extend type Query {
    """
    Get all events

    Example:
    events
    events(animalId: 1)
    """
    events("Animal ID" animalId: Int, "Event groups" groups: [EventGroup]): [Event]
}

enum EventGroup {
    General,
    Medical
}

enum EventType {
    GivenAway,
    Rescued,
    CheckIn,
    CheckOut,
    Died,
    TemporaryCare,
    Microchipped,
    LocationChange,
    Medication,
    Prophylaxis,
    Surgery,
    GenderElimination,
    Inspection
}

"Represents event"
interface Event {
    "Event id"
    id: Int!
    "Animal id"
    animalId: Int!
    "Event group"
    group: EventGroup!
    "Event type"
    type: EventType!
    "Event date"
    dateTime: String
    "Event comments"
    comments: String
}

"Represents medical and general event details"
type EventDetails {
    "Event costs"
    expenses: Float
}

"Represents general event"
type General implements Event {
    "Event id"
    id: Int!
    "Animal id"
    animalId: Int!
    "Event group"
    group: EventGroup!
    "Event type"
    type: EventType!
    "Event date"
    dateTime: String
    "Event comments"
    comments: String
    "Event details"
    details: EventDetails!
}

"Represents medical event"
type Medical implements Event {
    "Event id"
    id: Int!
    "Animal id"
    animalId: Int!
    "Event group"
    group: EventGroup!
    "Event type"
    type: EventType!
    "Event date"
    dateTime: String
    "Event comments"
    comments: String
    "Event details"
    details: EventDetails!
}

"Represents found event details"
type FoundEventDetails {
    "Street"
    street: String
    "House number"
    houseNo: String
    "Municipality id"
    municipalityId: Int
}

"Represents found event"
type Found implements Event {
    "Event id"
    id: Int!
    "Animal id"
    animalId: Int!
    "Event group"
    group: EventGroup!
    "Event type"
    type: EventType!
    "Event date"
    dateTime: String
    "Event comments"
    comments: String
    "Event details"
    details: FoundEventDetails!
}

"Represents given away event details"
type GivenAwayEventDetails {
    "Former owner id"
    formerOwnerId: Int
    "Reason"
    reason: String
}

"Represents given away event"
type GivenAway implements Event {
    "Event id"
    id: Int!
    "Animal id"
    animalId: Int!
    "Event group"
    group: EventGroup!
    "Event type"
    type: EventType!
    "Event date"
    dateTime: String
    "Event comments"
    comments: String
    "Event details"
    details: GivenAwayEventDetails!
}
