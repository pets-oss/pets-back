/* tslint:disable */
// generated by typescript-json-validator
import {inspect} from 'util';
import Ajv = require('ajv');
import EventStreetfind from '../interfaces/eventStreetfind.interface';
export const ajv = new Ajv({"allErrors":true,"coerceTypes":false,"format":"fast","nullable":true,"unicode":true,"uniqueItems":true,"useDefaults":true});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));

export {EventStreetfind};
export const EventStreetfindSchema = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "defaultProperties": [
  ],
  "definitions": {
    "default": {
      "defaultProperties": [
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": [
            "null",
            "string"
          ]
        },
        "surname": {
          "type": [
            "null",
            "string"
          ]
        }
      },
      "required": [
        "id",
        "name",
        "surname"
      ],
      "type": "object"
    }
  },
  "properties": {
    "animalId": {
      "type": "number"
    },
    "author": {
      "$ref": "#/definitions/default"
    },
    "comments": {
      "type": [
        "null",
        "string"
      ]
    },
    "date": {
      "type": [
        "null",
        "string"
      ]
    },
    "houseNo": {
      "type": [
        "null",
        "string"
      ]
    },
    "id": {
      "type": "number"
    },
    "municipalityId": {
      "type": "number"
    },
    "registrationDate": {
      "type": "string"
    },
    "registrationNo": {
      "type": "string"
    },
    "street": {
      "type": "string"
    }
  },
  "required": [
    "animalId",
    "author",
    "comments",
    "date",
    "houseNo",
    "id",
    "municipalityId",
    "registrationDate",
    "registrationNo",
    "street"
  ],
  "type": "object"
};
export type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>
export const isEventStreetfind = ajv.compile(EventStreetfindSchema) as ValidateFunction<EventStreetfind>;
export default function validate(value: unknown): EventStreetfind {
  if (isEventStreetfind(value)) {
    return value;
  } else {
    throw new Error(
      ajv.errorsText(isEventStreetfind.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: 'EventStreetfind'}) +
      '\n\n' +
      inspect(value),
    );
  }
}
