/* tslint:disable */
// generated by typescript-json-validator
import {inspect} from 'util';
import Ajv = require('ajv');
import Animal from './animal.interface';
export const ajv = new Ajv({"allErrors":true,"coerceTypes":false,"format":"fast","nullable":true,"unicode":true,"uniqueItems":true,"useDefaults":true});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));

export {Animal};
export const AnimalSchema = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "defaultProperties": [
  ],
  "properties": {
    "allergy": {
      "type": [
        "null",
        "string"
      ]
    },
    "birth_date": {
      "type": [
        "null",
        "string"
      ]
    },
    "breed": {
      "type": [
        "null",
        "string"
      ]
    },
    "chip_install_date": {
      "type": [
        "null",
        "string"
      ]
    },
    "color": {
      "type": [
        "null",
        "string"
      ]
    },
    "comments": {
      "type": [
        "null",
        "string"
      ]
    },
    "food": {
      "type": [
        "null",
        "string"
      ]
    },
    "gender": {
      "type": [
        "null",
        "string"
      ]
    },
    "id": {
      "type": "number"
    },
    "image_url": {
      "type": [
        "null",
        "string"
      ]
    },
    "microchip_id": {
      "type": [
        "null",
        "string"
      ]
    },
    "mod_time": {
      "type": [
        "null",
        "string"
      ]
    },
    "name": {
      "type": [
        "null",
        "string"
      ]
    },
    "organization": {
      "type": "string"
    },
    "registration_date": {
      "type": "string"
    },
    "registration_no": {
      "type": "string"
    },
    "species": {
      "type": [
        "null",
        "string"
      ]
    },
    "status": {
      "type": [
        "null",
        "string"
      ]
    },
    "weight": {
      "type": "number"
    }
  },
  "required": [
    "allergy",
    "birth_date",
    "breed",
    "chip_install_date",
    "color",
    "comments",
    "food",
    "gender",
    "id",
    "image_url",
    "microchip_id",
    "mod_time",
    "name",
    "organization",
    "registration_date",
    "registration_no",
    "species",
    "status",
    "weight"
  ],
  "type": "object"
};
export type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>
export const isAnimal = ajv.compile(AnimalSchema) as ValidateFunction<Animal>;
export default function validate(value: unknown): Animal {
  if (isAnimal(value)) {
    return value;
  } else {
    throw new Error(
      ajv.errorsText(isAnimal.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: 'Animal'}) +
      '\n\n' +
      inspect(value),
    );
  }
}
